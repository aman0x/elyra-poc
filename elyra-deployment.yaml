# Create a new namespace for Elyra
apiVersion: v1
kind: Namespace
metadata:
  name: elyra-system
---
# ConfigMap for storing elyra-metadata CLI script
apiVersion: v1
kind: ConfigMap
metadata:
  name: elyra-metadata-script
  namespace: elyra-system
data:
  setup-catalog.sh: |
    #!/bin/bash
    set -e
    
    # Create directories for metadata
    mkdir -p /home/jovyan/.local/share/jupyter/metadata/component-catalogs/
    
    # Create the Airflow package catalog using the CLI tool
    echo "Creating Airflow package catalog..."
    elyra-metadata create component-catalogs \
      --schema_name=airflow-package-catalog \
      --name="airflow-1-10-15" \
      --display_name="Apache Airflow 1.10.15 Components" \
      --description="Apache Airflow 1.10.15 operators and components" \
      --runtime_type="APACHE_AIRFLOW" \
      --categories="Core packages" \
      --airflow_package_download_url="https://files.pythonhosted.org/packages/f0/3a/f5ce74b2bdbbe59c925bb3398ec0781b66a64b8a23e2f6adc7ab9f1005d9/apache_airflow-1.10.15-py2.py3-none-any.whl" \
      --search_contrib=true
    
    # List catalogs to verify
    echo "Verifying catalog was created:"
    elyra-metadata list component-catalogs
    
    # Fix permissions
    chown -R jovyan:users /home/jovyan/.local/share/jupyter/metadata/
    
    echo "Airflow catalog configuration completed successfully"
---
# PersistentVolumeClaim for Elyra data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elyra-data-pvc
  namespace: elyra-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# PersistentVolumeClaim for Elyra work directory
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elyra-work-pvc
  namespace: elyra-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# PersistentVolumeClaim for Elyra home directory
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elyra-home-pvc
  namespace: elyra-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elyra
  namespace: elyra-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elyra
  template:
    metadata:
      labels:
        app: elyra
    spec:
      initContainers:
      - name: init-catalogs
        image: elyra/elyra:3.15.0
        command: ["/bin/bash", "-c"]
        args:
        - |
          echo "Running component catalog setup script..."
          /scripts/setup-catalog.sh
        volumeMounts:
        - name: elyra-metadata-scripts
          mountPath: /scripts
        - name: elyra-data
          mountPath: /home/jovyan/.local
      containers:
      - name: elyra
        image: elyra/elyra:3.15.0
        ports:
        - containerPort: 8888
        env:
        - name: JUPYTER_ENABLE_LAB
          value: "yes"
        - name: JUPYTER_TOKEN
          value: "dGf7Hs9pKl2Mn6Qw3rT5yUi8oP1aZ0bX"
        command: ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]
        volumeMounts:
        - name: elyra-data
          mountPath: /home/jovyan/.local
        - name: elyra-work
          mountPath: /home/jovyan/work
        - name: elyra-home
          mountPath: /home/jovyan
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2"
        readinessProbe:
          httpGet:
            path: /lab
            port: 8888
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /lab
            port: 8888
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: elyra-metadata-scripts
        configMap:
          name: elyra-metadata-script
          defaultMode: 0755
      - name: elyra-data
        persistentVolumeClaim:
          claimName: elyra-data-pvc
      - name: elyra-work
        persistentVolumeClaim:
          claimName: elyra-work-pvc
      - name: elyra-home
        persistentVolumeClaim:
          claimName: elyra-home-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: elyra
  namespace: elyra-system
spec:
  selector:
    app: elyra
  ports:
  - port: 8888
    targetPort: 8888
  type: NodePort